import com.curso.flux.EjemploFlux;
import com.curso.flux.SubscriptorEventos;

import reactor.core.Disposable;
import reactor.core.publisher.Flux;

public class Pruebas {

	public static void main(String[] args) {
		
		System.out.println("==================================");
		System.out.println(Thread.currentThread().getName());
		
		EjemploFlux ejF = new EjemploFlux();

		System.out.println("==================================");
		ejF.getEventos().subscribe();

		System.out.println("==================================");
		ejF.getEventos().subscribe( evento -> {
				System.out.println(evento);
				System.out.println(Thread.currentThread().getName());
			});

		System.out.println("==================================");
		ejF.getEventos().subscribe( evento -> {
				System.out.println(evento);
				System.out.println(Thread.currentThread().getName());
			},
			(error) -> System.out.println("ERROR"),
			() -> {
				System.out.println("YA");
				System.out.println(Thread.currentThread().getName());				
			});
		
		System.out.println("==================================");
		Flux<String> eventos = ejF.getEventos();
		eventos.subscribe(new SubscriptorEventos());
		
		
		System.out.println("FIN");
		
		
	}
	
}
